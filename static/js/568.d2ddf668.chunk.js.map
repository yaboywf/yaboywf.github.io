{"version":3,"file":"static/js/568.d2ddf668.chunk.js","mappings":"2JAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiBA,CAACC,EAAQC,EAAWC,KAC9C,IAAKF,EACD,KAAM,iFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACTC,WAAAA,CAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YAC7B,ECFG,MAAMC,EAAW,SAACC,EAAKC,GAAuB,IAAjBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,OAAO,IAAIG,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQC,IAAgB,IAAf,OAAEC,GAAQD,EACpC,MAAME,EAAiB,IAAItB,EAAsBqB,GACnB,MAA1BC,EAAelB,QAA0C,OAAxBkB,EAAejB,KAChDU,EAAQO,GAGRN,EAAOM,EACX,IAEJL,EAAIE,iBAAiB,SAASI,IAAgB,IAAf,OAAEF,GAAQE,EACrCP,EAAO,IAAIhB,EAAsBqB,GAAQ,IAE7CJ,EAAIO,KAAK,OAAQ9B,EAAMC,QAAUa,GAAK,GACtCiB,OAAOC,KAAKhB,GAASiB,SAASC,IAC1BX,EAAIY,iBAAiBD,EAAKlB,EAAQkB,GAAK,IAE3CX,EAAIa,KAAKrB,EAAK,GAEtB,ECnBA,ECOoBqB,CAAChC,EAAWC,EAAYgC,EAAelC,KACvD,MAAMmC,EAAMnC,GAAUH,EAAMuC,QAC5BrC,EAAeoC,EAAKlC,EAAWC,GAC/B,MAAMmC,EAAS,CACXC,YAAa,QACbC,QAASJ,EACTK,WAAYvC,EACZwC,YAAavC,EACbwC,gBAAiBR,GAErB,OAAOxB,EAAS,uBAAwBiC,KAAKC,UAAUP,GAAS,CAC5D,eAAgB,oBAClB,E,wCChBN,MA+EA,EA/EgBQ,KACZ,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAEF,MAAM,EAAOG,SAAS,KACtDI,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAEF,MAAM,EAAOG,SAAS,KACxDM,EAAUC,IAAeR,EAAAA,EAAAA,aACzBzC,EAAQkD,IAAaT,EAAAA,EAAAA,YA4C5B,OA1CAU,EAAAA,EAAAA,YAAU,MACFL,EAAQP,MAAQO,EAAQJ,UACxBG,GAAWO,IAAU,IACdA,EACHb,KAAe,KAATA,EACNG,QAAqB,KAAZA,KAEjB,GACD,CAACH,EAAMG,EAASI,KAmCfO,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPD,EAAAA,EAAAA,KAAA,UAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGRF,EAAAA,EAAAA,MAAA,QAAMK,SAAWC,GAxCzB,SAAoBA,GAChBA,EAAEC,iBACGhB,EAAOL,MAASK,EAAOF,UACxBG,GAAWO,IAAU,IACdA,EACHb,KAAe,KAATA,MAIVM,GAAWO,IAAU,IACdA,EACHV,QAAqB,KAAZA,OASjBmB,EAAa,kBAAmB,mBALf,CACbtB,KAAMA,EACNuB,SAAUpB,GAGgD,qBAC7DqB,MAAK,KACFb,EAAU,WACVD,EAAY,8BAA8B,IAE7Ce,OAAMC,IACHC,QAAQC,MAAMF,GACdf,EAAU,SACVD,EAAY,wEAAwE,GAE5F,CAU+BmB,CAAWT,GAAIU,YAAU,EAAAd,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,OAAMf,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SAAOe,KAAK,OAAOhC,KAAK,OAAOiC,GAAG,OAAOC,YAAY,kBAAkBC,UAAQ,EAACC,SAAWhB,GAAMnB,EAAQmB,EAAE1C,OAAO2D,OAAQC,aAAa,OAAOC,QAASA,IAAM/B,GAAYgC,IAAI,IAAWA,EAAMxC,MAAM,SACpMiB,EAAAA,EAAAA,KAAA,KAAGgB,GAAG,aAAalB,UAAWV,EAAOL,KAAO,UAAY,GAAGgB,SAAC,iCAEhEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,UAASf,SAAC,aACzBC,EAAAA,EAAAA,KAAA,YAAUjB,KAAK,UAAUiC,GAAG,UAAUQ,KAAK,KAAKC,KAAK,KAAKR,YAAY,qBAAqBC,UAAQ,EAACC,SAAWhB,GAAMhB,EAAWgB,EAAE1C,OAAO2D,OAAQE,QAASA,IAAM/B,GAAYgC,IAAI,IAAWA,EAAMrC,SAAS,SAC1Mc,EAAAA,EAAAA,KAAA,KAAGgB,GAAG,gBAAgBlB,UAAWV,EAAOF,QAAU,UAAY,GAAGa,SAAC,iCAEtEC,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAAQhB,SAAC,eAG1BC,EAAAA,EAAAA,KAAA,KAAGF,UAAiB,OAANtD,QAAM,IAANA,EAAAA,EAAU,GAAGuD,SAAEP,KAE7BQ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,MACJ,C,sDCjEf,QAdA,WACI,MAAOC,EAAYC,IAAiB3C,EAAAA,EAAAA,UAAS,KAI7C,OAFAU,EAAAA,EAAAA,YAAU,IAAMiC,EAAcC,OAAOC,SAASC,OAAO,KAGjDlC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,IAAIvE,OAAO,OAAOuD,GAAG,QAAQlB,UAA0B,KAAf6B,EAAoB,SAAW,GAAG5B,SAAC,UACnFC,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,gBAAgBvE,OAAO,OAAOuD,GAAG,aAAalB,UAA0B,iBAAf6B,EAAgC,SAAW,GAAG5B,SAAC,gBAChHC,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,aAAavE,OAAO,OAAOuD,GAAG,UAAUlB,UAA0B,cAAf6B,EAA6B,SAAW,GAAG5B,SAAC,iBAGnH,C,8CCbA,MAmBA,EAnBe2B,KAEP7B,EAAAA,EAAAA,MAAA,UAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,qCAAqCvE,OAAO,SAASwE,IAAI,sBAAsB,aAAW,YAAWlC,UACzGC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAEtBE,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,0CAA0CvE,OAAO,SAASwE,IAAI,sBAAsB,aAAW,WAAUlC,UAC7GC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yBAEtBE,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,mDAAmDvE,OAAO,SAASwE,IAAI,sBAAsB,aAAW,WAAUlC,UACtHC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAEtBE,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,6BAA6BvE,OAAO,SAASwE,IAAI,sBAAsB,aAAW,SAAQlC,UAC9FC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wB","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/send/send.js","components/Contact.jsx","components/Header.jsx","components/Footer.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { useState, useEffect } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport \"../styles/general.scss\";\r\nimport \"../styles/contact.scss\";\r\n\r\nconst Contact = () => {\r\n    const [name, setName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [errors, setErrors] = useState({ name: false, message: false });\r\n    const [touched, setTouched] = useState({ name: false, message: false });\r\n    const [response, setResponse] = useState();\r\n    const [status, setStatus] = useState();\r\n\r\n    useEffect(() => {\r\n        if (touched.name || touched.message) {\r\n            setErrors((prevErrors) => ({\r\n                ...prevErrors,\r\n                name: name === '',\r\n                message: message === ''\r\n            }));\r\n        }\r\n    }, [name, message, touched]);\r\n\r\n    function submitForm(e) {\r\n        e.preventDefault();\r\n        if (!errors.name || !errors.message) {\r\n            setErrors((prevErrors) => ({\r\n                ...prevErrors,\r\n                name: name === ''\r\n            }));\r\n\r\n            // Set error for message field\r\n            setErrors((prevErrors) => ({\r\n                ...prevErrors,\r\n                message: message === ''\r\n            }));\r\n        }\r\n\r\n        const formData = {\r\n            name: name,\r\n            feedback: message\r\n        };\r\n\r\n        emailjs.send(\"service_qskfpcj\", \"template_21t2lau\", formData, \"x3W7CWcYMOJJ_XUHF\")\r\n        .then(() => {\r\n            setStatus(\"success\");\r\n            setResponse(\"Your message has been sent!\");\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            setStatus(\"error\");\r\n            setResponse(\"An error occurred while sending your message. Please try again later.\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <main className=\"contact works\">\r\n            <Header></Header>\r\n\r\n            <header>\r\n                <h1>Contact Me</h1>\r\n            </header>\r\n\r\n            <form onSubmit={(e) => submitForm(e)} noValidate>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter your name\" required onChange={(e) => setName(e.target.value)} autoComplete=\"name\" onInput={() => setTouched((prev) => ({ ...prev, name: true }))} />\r\n                    <p id=\"name-error\" className={errors.name ? \"visible\" : \"\"}>This is a required field</p>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"message\">Message</label>\r\n                    <textarea name=\"message\" id=\"message\" cols=\"30\" rows=\"10\" placeholder=\"Enter your message\" required onChange={(e) => setMessage(e.target.value)} onInput={() => setTouched((prev) => ({ ...prev, message: true }))}></textarea>\r\n                    <p id=\"message-error\" className={errors.message ? \"visible\" : \"\"}>This is a required field</p>\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n\r\n            <p className={status ?? \"\"}>{response}</p>\r\n\r\n            <Footer></Footer>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Contact","import { useEffect, useState } from \"react\";\r\nimport \"../styles/nav.scss\";\r\n\r\nfunction Header() {\r\n    const [activeLink, setActiveLink] = useState(\"/\");\r\n\r\n    useEffect(() => setActiveLink(window.location.hash), []);\r\n\r\n    return (\r\n        <nav>\r\n            <a href=\"/\" target=\"_top\" id=\"index\" className={activeLink === \"\" ? \"active\" : \"\"}>Home</a>\r\n            <a href=\"/#/experience\" target=\"_top\" id=\"experience\" className={activeLink === \"#/experience\" ? \"active\" : \"\"}>Experience</a>\r\n            <a href=\"/#/contact\" target=\"_top\" id=\"contact\" className={activeLink === \"#/contact\" ? \"active\" : \"\"}>Contact Me</a>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"../styles/footer.scss\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <a href=\"https://www.instagram.com/yaboywf/\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"instagram\">\r\n                <div><i className=\"fab fa-instagram\"></i></div>\r\n            </a>\r\n            <a href=\"https://www.facebook.com/dylan.yeo.3705\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"facebook\">\r\n                <div><i className=\"fab fa-facebook\"></i></div>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/dylan-yeo-858b79303/\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"linkedin\">\r\n                <div><i className=\"fab fa-linkedin-in\"></i></div>\r\n            </a>\r\n            <a href=\"https://github.com/yaboywf\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"github\">\r\n                <div><i className=\"fab fa-github\"></i></div>\r\n            </a>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Contact","name","setName","useState","message","setMessage","errors","setErrors","touched","setTouched","response","setResponse","setStatus","useEffect","prevErrors","_jsxs","className","children","_jsx","Header","onSubmit","e","preventDefault","emailjs","feedback","then","catch","err","console","error","submitForm","noValidate","htmlFor","type","id","placeholder","required","onChange","value","autoComplete","onInput","prev","cols","rows","Footer","activeLink","setActiveLink","window","location","hash","href","rel"],"sourceRoot":""}